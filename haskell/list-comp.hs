[(i,j) | i <- [1,2], j <- [1..4]]
-- [(1,1),(1,2),(1,3),(1,4),(2,1),(2,2),(2,3),(2,4)]

take 5 [[(i,j) | i <- [1,2]] | j <- [1..]]
-- nested
-- [[(1,1),(2,1)], [(1,2),(2,2)], [(1,3),(2,3)], [(1,4),(2,4)], [(1,5),(2,5)]]

take 10 [(i,j) | i <- [1..], let k = i*i, j <- [1..k]]
-- let binding in it
-- [(1,1),(2,1),(2,2),(2,3),(2,4),(3,1),(3,2),(3,3),(3,4),(3,5)]


-- # List monad

do i <- [1,2]
   j <- [1..4]
   return (i,j)
-- [(1,1),(1,2),(1,3),(1,4),(2,1),(2,2),(2,3),(2,4)]
-- or
liftM2 (,) [1,2] [1..4]

do j <- [1..]
    return
        (do i <- [1,2]
            return (i,j))
-- [[(1,1),(2,1)], [(1,2),(2,2)], [(1,3),(2,3)], [(1,4),(2,4)], [(1,5),(2,5)]]
